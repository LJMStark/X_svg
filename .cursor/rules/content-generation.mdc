---
globs: batch_process_tweets.py,process_tweets.py
description: 内容生成和解析规范
---

# 内容生成和解析规范

## 小红书文案生成

### 生成流程
1. 读取 [小红书文案提示词.txt](mdc:小红书文案提示词.txt) 作为系统提示词
2. 将推文内容作为用户输入
3. 调用AI模型生成小红书风格内容
4. 解析响应，提取标题和正文

### 内容解析规则

```python
def parse_xiaohongshu_post(content: str) -> Tuple[str, str]:
    """
    解析小红书文案响应
    
    解析规则：
    1. 第一行作为标题
    2. 跳过标记行：["2. 正文", "正文:", "Body:", "1. 标题", "标题:"]
    3. 其余内容作为正文
    4. 标题为空时使用"Untitled"
    """
```

### 输出格式
- **标题**: 简洁有力，符合小红书风格
- **正文**: 包含完整内容和相关标签
- **文件保存**: 保存到 `body.txt` 文件

## 文件夹命名规范

### 命名规则
1. 使用正文第一行作为文件夹名称
2. 移除非法字符：`[<>:"/\\|?*]`
3. 替换空格为下划线
4. 限制长度为100字符
5. 处理重复名称（添加数字后缀）

### 文件名清理
```python
def sanitize_filename(filename: str, max_length: int = 100) -> str:
    """清理文件名，确保系统兼容性"""
    # 移除非法字符
    filename = re.sub(r'[<>:"/\\|?*]', '_', filename)
    # 标准化空格
    filename = re.sub(r'\s+', ' ', filename).strip()
    # 限制长度
    if len(filename) > max_length:
        filename = filename[:max_length].rstrip()
    return filename or "untitled"
```

## 断点续传机制

### 检查逻辑
- 检查目标文件夹是否存在
- 验证必需文件：`generated.svg` 和 `body.txt`
- 如果文件完整，跳过处理
- 如果文件不完整，重新生成

### 重复处理
- 自动检测已处理的记录
- 支持从任意索引开始处理
- 记录处理进度和统计信息

## 内容质量控制

### 验证标准
- 生成内容不能为空
- 标题长度合理（1-100字符）
- 正文包含有意义的内容
- 文件保存成功

### 错误恢复
- API调用失败时重试
- 内容解析失败时使用默认值
- 文件保存失败时记录错误
- 继续处理下一条记录